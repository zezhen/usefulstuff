package me.lcode.usecase.util;

public class HBaseScan {
//    public static void main(String[] args) throws IOException {
//        //Scan?????????????????????
//        //???????????????family???column ???????????????????????????addFamily???Column?????????????????????columns??? 
//        // scan.addFamily(); 
//        // scan.addColumn();
//        // scan.setMaxVersions(); //????????????????????????????????????????????????????????????setMaxVersions?????????????????????????????????????????????setMaxVersions??????????????????????????????.
//        // scan.setTimeRange(); //????????????????????????????????????????????????????????????????????????cell???????????????.
//        // scan.setTimeStamp(); //???????????????
//        // scan.setFilter(); //??????Filter??????????????????????????????
//        // scan.setStartRow(); //????????????????????????????????????????????????????????????
//        // scan.setStopRow(); //???????????????????????????????????????
//        // scan.setBatch(); //?????????????????????Cell?????????????????????????????????????????????????????????OutofMemory?????????
//        
//        //?????????
//        //1???FilterList???????????????????????????
//        //FilterList.Operator.MUST_PASS_ALL -->and
//        //FilterList.Operator.MUST_PASS_ONE -->or
//        //eg???FilterList list = new FilterList(FilterList.Operator.MUST_PASS_ONE);
//        //2???SingleColumnValueFilter
//        //3???ColumnPrefixFilter?????????????????????????????????
//        //4???MultipleColumnPrefixFilter???ColumnPrefixFilter????????????????????????????????????????????????
//        //5???QualifierFilter??????????????????????????????
//        //6???RowFilter
//        //7???RegexStringComparator???????????????????????????????????????
//        //8???SubstringComparator?????????????????????????????????????????????????????????????????????
//        
//        HTable table=(HTable) getHTablePool().getTable("tb_stu");
//        Scan scan=new Scan();
//        scan.setMaxVersions();
//        //?????????????????????Cell?????????????????????????????????????????????????????????OutofMemory?????????
//        scan.setBatch(1000);
//
//        //scan.setTimeStamp(NumberUtils.toLong("1370336286283"));
//        //scan.setTimeRange(NumberUtils.toLong("1370336286283"), NumberUtils.toLong("1370336337163"));
//        //scan.setStartRow(Bytes.toBytes("quanzhou"));
//        //scan.setStopRow(Bytes.toBytes("xiamen"));
//        //scan.addFamily(Bytes.toBytes("info")); 
//        //scan.addColumn(Bytes.toBytes("info"), Bytes.toBytes("id"));
//        
//        //???????????????info??????id??????1?????????
//        //?????????(????????????)
//        // Filter filter = new SingleColumnValueFilter(
//        //         Bytes.toBytes("info"), Bytes.toBytes("id"), CompareOp.EQUAL, Bytes.toBytes("1")); 
//        // scan.setFilter(filter);
//        
//        //?????????(????????????)
//        //FilterList filterList=new FilterList();
//        //Filter filter = new SingleColumnValueFilter(
//        //    Bytes.toBytes("info"), Bytes.toBytes("id"), CompareOp.EQUAL, Bytes.toBytes("1"));
//        //filterList.addFilter(filter);
//        //scan.setFilter(filterList);
//        
//        ResultScanner rs = table.getScanner(scan);
//        
//        for (Result r : rs) {
//            for (KeyValue kv : r.raw()) {
//                System.out.println(String.format("row:%s, family:%s, qualifier:%s, qualifiervalue:%s, timestamp:%s.", 
//                        Bytes.toString(kv.getRow()), 
//                        Bytes.toString(kv.getFamily()), 
//                        Bytes.toString(kv.getQualifier()), 
//                        Bytes.toString(kv.getValue()),
//                        kv.getTimestamp()));
//            }
//        }
//        
//        rs.close();
//    }
}
